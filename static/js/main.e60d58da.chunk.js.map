{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","currentTab","find","tab","id","content","className","map","title","href","onClick","onSelect","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"iMAcaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEA,IAAKF,EACH,OAAO,KAGT,IAAMG,GAAiB,OAAJH,QAAI,IAAJA,OAAA,EAAAA,EAAMI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,OAAkBD,EAAK,GAE/DO,EAAYJ,EAAZI,QAQR,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGR,EAAKS,KAAI,SAAAJ,GAAG,OACX,oBACEG,UAAWL,EAAWG,KAAOD,EAAIC,GAAK,YAAc,GACpD,UAAQ,MAFV,SAKE,mBACEI,MAAOL,EAAIK,MACXC,KAAI,WAAMN,EAAIC,IACd,UAAQ,UACRM,QAAS,kBApBN,SAACP,GACZJ,IAAkBI,EAAIC,IACxBJ,EAAcG,GAkBWQ,CAASR,IAJ1B,SAMGA,EAAIK,SARFL,EAAIC,WAejB,qBAAKE,UAAU,QAAQ,UAAQ,aAA/B,SACGD,QCnDIP,EAAO,CAClB,CAAEM,GAAI,QAASI,MAAO,QAASH,QAAS,eACxC,CAAED,GAAI,QAASI,MAAO,QAASH,QAAS,eACxC,CAAED,GAAI,QAASI,MAAO,QAASH,QAAS,gBAS7BO,EAAgB,WAC3B,MAA0CC,mBAASf,EAAK,GAAGM,IAA3D,mBAAOL,EAAP,KAAsBe,EAAtB,KAIQN,IAFe,OAAJV,QAAI,IAAJA,OAAA,EAAAA,EAAMI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,OAAkBD,EAAK,IAE/DU,MAMR,OACE,sBAAKF,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,uCAEOE,MAGP,cAAC,EAAD,CACEV,KAAMA,EACNC,cAAeA,EACfC,cAdgB,SAACG,GACrBW,EAAiBX,EAAIC,WCvBzBW,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e60d58da.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Tab {\n  id: string,\n  title: string,\n  content: string,\n}\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void,\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  if (!tabs) {\n    return null;\n  }\n\n  const currentTab = tabs?.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  const { content } = currentTab;\n\n  const onSelect = (tab: Tab) => {\n    if (selectedTabId !== tab.id) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              className={currentTab.id === tab.id ? 'is-active' : ''}\n              data-cy=\"Tab\"\n              key={tab.id}\n            >\n              <a\n                title={tab.title}\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => onSelect(tab)}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\ntype Tab = {\n  id: string,\n  title: string,\n  content: string,\n};\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const currentTab = tabs?.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  const { title } = currentTab;\n\n  const onTabSelected = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is\n        {` ${title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}